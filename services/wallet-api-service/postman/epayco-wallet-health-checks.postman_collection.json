{
  "info": {
    "name": "EPayco Wallet - Health Checks",
    "description": "Colección dedicada para verificar el estado de salud de todos los servicios del ecosistema EPayco Wallet.\n\n**Servicios incluidos:**\n- Wallet API Service (Puerto 3000)\n- Wallet DB Service (Puerto 3001)\n- Frontend Service (Puerto 5173)\n\n**Uso recomendado:**\n1. Ejecutar esta colección antes de realizar pruebas funcionales\n2. Usar para monitoreo de servicios en diferentes ambientes\n3. Integrar en pipelines de CI/CD para verificación de despliegues",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "e1f2g3h4-i5j6-k7l8-m9n0-o1p2q3r4s5t6"
  },
  "item": [
    {
      "name": "API Service Health",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('API Service is healthy', function () {",
              "    pm.response.to.have.status(200);",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('status', 'ok');",
              "    pm.expect(responseJson).to.have.property('timestamp');",
              "});",
              "",
              "pm.test('Response time is acceptable', function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{apiBaseUrl}}/health",
          "host": ["{{apiBaseUrl}}"],
          "path": ["health"]
        },
        "description": "Verifica el estado de salud del servicio principal de la API"
      },
      "response": [
        {
          "name": "Healthy Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{apiBaseUrl}}/health",
              "host": ["{{apiBaseUrl}}"],
              "path": ["health"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2025-01-08T03:30:00.000Z\"\n}"
        }
      ]
    },
    {
      "name": "DB Service Health",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('DB Service is healthy', function () {",
              "    pm.response.to.have.status(200);",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('status', 'ok');",
              "    pm.expect(responseJson).to.have.property('timestamp');",
              "});",
              "",
              "pm.test('Response time is acceptable', function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{dbBaseUrl}}/health",
          "host": ["{{dbBaseUrl}}"],
          "path": ["health"]
        },
        "description": "Verifica el estado de salud del servicio de base de datos"
      },
      "response": [
        {
          "name": "Healthy Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{dbBaseUrl}}/health",
              "host": ["{{dbBaseUrl}}"],
              "path": ["health"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2025-01-08T03:30:00.000Z\"\n}"
        }
      ]
    },
    {
      "name": "Frontend Service Health",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Frontend Service is accessible', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response time is acceptable', function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(3000);",
              "});",
              "",
              "pm.test('Response contains HTML content', function () {",
              "    pm.expect(pm.response.text()).to.include('html');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{frontendBaseUrl}}",
          "host": ["{{frontendBaseUrl}}"]
        },
        "description": "Verifica que el servicio frontend esté accesible y sirviendo contenido"
      },
      "response": [
        {
          "name": "Accessible Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{frontendBaseUrl}}",
              "host": ["{{frontendBaseUrl}}"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "html",
          "header": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "cookie": [],
          "body": "<!DOCTYPE html>\n<html>...</html>"
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "apiBaseUrl",
      "value": "http://localhost:3000/api",
      "description": "URL base del servicio API"
    },
    {
      "key": "dbBaseUrl",
      "value": "http://localhost:3001",
      "description": "URL base del servicio de base de datos"
    },
    {
      "key": "frontendBaseUrl",
      "value": "http://localhost:5173",
      "description": "URL base del servicio frontend"
    }
  ]
}
