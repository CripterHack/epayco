services:
    mysql:
        image: mysql:8.0
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: wallet
            MYSQL_USER: wallet
            MYSQL_PASSWORD: wallet
        ports:
            - '3306:3306'
        volumes:
            - mysql_data:/var/lib/mysql
            - ./sql/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - wallet-net

    mailhog:
        image: mailhog/mailhog:latest
        restart: unless-stopped
        ports:
            - '1025:1025'
            - '8025:8025'
        networks:
            - wallet-net

    wallet-db-service:
        build:
            context: ..
            dockerfile: services/wallet-db-service/Dockerfile
        restart: unless-stopped
        env_file:
            - ../services/wallet-db-service/.env
        environment:
            DB_HOST: mysql
            DB_PORT: 3306
            DB_USERNAME: wallet
            DB_PASSWORD: wallet
            DB_NAME: wallet
            DB_LOGGING: 'false'
            MAIL_HOST: mailhog
            MAIL_PORT: 1025
        ports:
            - '3001:3001'
        depends_on:
            mysql:
                condition: service_healthy
            mailhog:
                condition: service_started
        networks:
            - wallet-net

    wallet-api-service:
        build:
            context: ..
            dockerfile: services/wallet-api-service/Dockerfile
        restart: unless-stopped
        env_file:
            - ../services/wallet-api-service/.env
        environment:
            DB_SERVICE_BASE_URL: http://wallet-db-service:3001/internal
            INTERNAL_API_KEY: ${INTERNAL_API_KEY:-local-internal-api-key}
            CORS_ALLOWED_ORIGINS: http://localhost:5173,http://localhost:4173
        ports:
            - '3000:3000'
        depends_on:
            wallet-db-service:
                condition: service_started
        networks:
            - wallet-net

    frontend:
        build:
            context: ..
            dockerfile: apps/frontend/Dockerfile
        restart: unless-stopped
        environment:
            VITE_API_BASE_URL: http://wallet-api-service:3000/api
            VITE_APP_NAME: Epayco Wallet
        ports:
            - '5173:80'
        depends_on:
            wallet-api-service:
                condition: service_started
        networks:
            - wallet-net

volumes:
    mysql_data:

networks:
    wallet-net:
        driver: bridge